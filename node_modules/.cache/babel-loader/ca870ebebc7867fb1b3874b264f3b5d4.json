{"ast":null,"code":"const base_url = \"https://strangers-things.herokuapp.com/api/2202-ftb-et-web-ft\";\nexport const registerUser = async (username, password) => {\n  const response = await fetch(`${base_url}/users/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({})\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const fetchAllPosts = async () => {\n  const response = await fetch(`${base_url}/posts`);\n  const data = await response.json();\n  return data;\n};\nexport const createPost = async (postDescription, token) => {\n  const response = await fetch(`${base_url}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      post: {\n        title: postDescription.title,\n        description: postDescription.description,\n        location: postDescription.location,\n        price: postDescription.price,\n        willDeliver: postDescription.willDeliver\n      }\n    })\n  });\n  const data = await response.json();\n  return data;\n};\nexport const updatePost = async (updateObject, token, postId) => {\n  const response = fetch(`${base_url}/posts/${postId}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      post: {\n        updateObject\n      }\n    })\n  });\n  const data = await response.json();\n  return data;\n};","map":{"version":3,"sources":["/home/k_hongkham/CourseWork/week4/reactFrontenBoilerPlate/src/api/index.js"],"names":["base_url","registerUser","username","password","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","fetchAllPosts","createPost","postDescription","token","Authorization","post","title","description","location","price","willDeliver","updatePost","updateObject","postId"],"mappings":"AAAA,MAAMA,QAAQ,GACZ,+DADF;AAGA,OAAO,MAAMC,YAAY,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACxD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,iBAAb,EAA+B;AACzDM,IAAAA,MAAM,EAAE,MADiD;AAEzDC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFgD;AAKzDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAf;AALmD,GAA/B,CAA5B;AAOA,QAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAOA,IAAP;AACD,CAXM;AAaP,OAAO,MAAMI,aAAa,GAAG,YAAY;AACvC,QAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,QAAb,CAA5B;AACA,QAAMW,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AACA,SAAOD,IAAP;AACD,CAJM;AAMP,OAAO,MAAMK,UAAU,GAAG,OAAOC,eAAP,EAAwBC,KAAxB,KAAkC;AAC1D,QAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,QAAb,EAAsB;AAChDM,IAAAA,MAAM,EAAE,MADwC;AAEhDC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPY,MAAAA,aAAa,EAAG,UAASD,KAAM;AAFxB,KAFuC;AAMhDV,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBU,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAEJ,eAAe,CAACI,KADnB;AAEJC,QAAAA,WAAW,EAAEL,eAAe,CAACK,WAFzB;AAGJC,QAAAA,QAAQ,EAAEN,eAAe,CAACM,QAHtB;AAIJC,QAAAA,KAAK,EAAEP,eAAe,CAACO,KAJnB;AAKJC,QAAAA,WAAW,EAAER,eAAe,CAACQ;AALzB;AADa,KAAf;AAN0C,GAAtB,CAA5B;AAgBA,QAAMd,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AACA,SAAOD,IAAP;AACD,CAnBM;AAqBP,OAAO,MAAMe,UAAU,GAAG,OAAOC,YAAP,EAAqBT,KAArB,EAA4BU,MAA5B,KAAuC;AAC/D,QAAMxB,QAAQ,GAAGC,KAAK,CAAE,GAAEL,QAAS,UAAS4B,MAAO,EAA7B,EAAgC;AACpDtB,IAAAA,MAAM,EAAE,OAD4C;AAEpDC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPY,MAAAA,aAAa,EAAG,UAASD,KAAM;AAFxB,KAF2C;AAMpDV,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBU,MAAAA,IAAI,EAAE;AAAEO,QAAAA;AAAF;AADa,KAAf;AAN8C,GAAhC,CAAtB;AAUA,QAAMhB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AACA,SAAOD,IAAP;AACD,CAbM","sourcesContent":["const base_url =\n  \"https://strangers-things.herokuapp.com/api/2202-ftb-et-web-ft\";\n\nexport const registerUser = async (username, password) => {\n  const response = await fetch(`${base_url}/users/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({}),\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\n\nexport const fetchAllPosts = async () => {\n  const response = await fetch(`${base_url}/posts`);\n  const data = await response.json();\n  return data;\n};\n\nexport const createPost = async (postDescription, token) => {\n  const response = await fetch(`${base_url}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      post: {\n        title: postDescription.title,\n        description: postDescription.description,\n        location: postDescription.location,\n        price: postDescription.price,\n        willDeliver: postDescription.willDeliver,\n      },\n    }),\n  });\n  const data = await response.json();\n  return data;\n};\n\nexport const updatePost = async (updateObject, token, postId) => {\n  const response = fetch(`${base_url}/posts/${postId}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      post: { updateObject },\n    }),\n  });\n  const data = await response.json();\n  return data;\n};\n"]},"metadata":{},"sourceType":"module"}